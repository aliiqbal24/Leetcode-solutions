### NOTES
# we are given 2 sorted linked list and are asked to return the conbined sorted list
# to solve this problem we will iterate through each list with seperate pointers
# first, initialize a dummy node to avoid edge case of empty list
# we will add the smaller of the pointer to our combined array
# repeat this process until both arrays have been completed
# if one list is emptied be0fre the other, we can directly add the remaining list


# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        
        dummy = ListNode()
        tail = dummy
        
        while list1 and list2:
            if list1.val < list2.val:
                tail.next = list1
                list1 = list1.next
            else:
                tail.next = list2
                list2 = list2.next
            tail = tail.next

        if list1:
            tail.next = list1
        elif list2:
            tail.next = list2

        return dummy.next



        


            
